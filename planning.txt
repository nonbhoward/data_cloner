A place to plan out project structure in attempt to  head-off refactoring

DATA CLONER DISPATCHER HIERARCHY
run -> src.main.py
  cloner_manager
    data_cloner

CLONER MANAGER, generic container for cloners
what should it do?
    launch the cloners
    manage the cache
    throttle transfers?
      what else could do this job?

DATA CLONER
remote_specific_cloner, for example google_drive_cloner
    attributes
        memory_data_rate, a throttling mechanism in bytes/second
    functions
        download, fetch remote files
        upload, no plans to implement upload as use-case is currently fetching

PLANNED FEATURES
authenticate with multiple remotes
dispatch cloners asynchronously
cache data between runs in a compressed json

PROGRAM FLOW
1. read local configuration & environment variables
    read config works, DONE
    read dotenv works, DONE
2. main module instantiates cloner manager class with config
    cloner manager (cm) instantiates cloners that need to run
    cm checks that there are cloners that are ready to run
    cm loads previous run's cache
    cm performs check to see which cloners to instantiate
    cm deploys the cloners asynchronously
    cm manages the returned data
    cm creates a cache of cloner metadata as it runs
    cm waits until all cloners are finished running
    cm records timestamp
    cm writes cache to disk and exits
3. runtime ends

PROJECT STRUCTURE
config, yaml configuration for project
env, the virtual environment created by something like python3 -m venv ./env at root of project
src
    cloners, individual data cloners
        example_cloner.ExampleCloner, an example with only the required cloner properties
        remote_specific_cloner.RemoteSpecificCloner, some misc cloner
    config_reader
        __init__
        config_reader, module to read the yaml config
    managers,
        cloner_manager.ClonerManager, manager of all data cloners
    __init__
    main, entry-point to python
test
    mock, reusable-parts for test modules
    test_cloner_manager
    test_config_reader
    test_main
    test_remote_specific_cloner
    test_remote_specific_cloner_authenticate
    test_remote_specific_cloner_download
.gitignore
credentials.json, required by googledrive pypi package
planning.txt, this file
requirements.txt, pip's requirements
